
name: Get Branch of Tag
on:
  workflow_call:
  push:
    tags:
      - 'v*.*.*'
jobs:
# Get the latest Tag's branch and store into variable 
  getTB:
    runs-on: ubuntu-latest
    outputs: 
      bName: ${{steps.branch-name.outputs.branchN}}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Get Branch
        id: branch-name
        run: |
          tag=${{github.ref_name}}
          raw=$(git branch -r --contains ${{ github.ref }})
          branch=${raw/origin\/}
          echo "branchN=$branch" >> $GITHUB_OUTPUT
          echo "Branch is $branch"
          tagStripped=${tag/v1\/}
          echo "Tag is $tag"
          echo "Tag Stripped is $tagStripped"
  debug:
    needs: getTB
    runs-on: ubuntu-latest
    steps:
      - name: Debug output
        run: |
          echo "${{ toJson(needs.getTB) }}"
  check-string:
    needs: getTB
    runs-on: ubuntu-latest
    if: ${{ !(contains(github.ref_name, 'feature1') && needs.getTB.outputs.bName == '  feature1')}}
    steps:
      - name: String Output
        run: |
          echo "Tag does not match branch,"


# Depending on what branch do an autoscale refresh to that environment
# If brannch = stage
  # Refresh to stage environment
# If branch = develop
  # Refresh to Develop
# If branch = main
  # Refresh to Production  
# ___________________________________________________________________
  main-refresh:
    runs-on: ubuntu-latest
    needs: getTB
    if: ${{ contains(github.ref_name, 'main') && needs.getTB.outputs.bName == '  main' }}
    steps:
    - name: Configure AWS credentials
      id: aws-credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-1

    - name: 'Get value from Parameter Store'
      id: parameter
      uses: poad/get-aws-ssm-parameter@v1.0.0
      with: 
        parameter-name: /mainRefresh
        aws-region: us-west-1
  
    - name: 'Another example step'
      run: echo " Refreshing- ${{ steps.parameter.outputs.value }} "

  feature1-refresh:
    runs-on: ubuntu-latest
    needs: [getTB]
    if: ${{ contains(github.ref_name, 'feature1')  && needs.getTB.outputs.bName == '  feature1'}}
    steps:
    - name: Configure AWS credentials
      id: aws-credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-1

    - name: 'Get value from Parameter Store'
      id: parameter
      uses: poad/get-aws-ssm-parameter@v1.0.0
      with: 
        parameter-name: /featureRefresh
        aws-region: us-west-1
  
    - name: 'Another example step'
      run: echo " Refreshing- ${{ steps.parameter.outputs.value }} "



# If tests are a success - update last working commit on param store
# Else
  # Grab the latest commit from param store
  # Call workflow again
  # Refresh with this last working commit 
# _______________________________________________________________________
  getParameter:
    runs-on: ubuntu-latest
    steps:
    - name: Configure AWS credentials
      id: aws-credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-1

    - name: 'Get value from Parameter Store'
      id: parameter
      uses: poad/get-aws-ssm-parameter@v1.0.0
      with: 
        parameter-name: /stableCommit
        aws-region: us-west-1
  
    - name: 'Another example step'
      run: echo ${{ steps.parameter.outputs.value }}


